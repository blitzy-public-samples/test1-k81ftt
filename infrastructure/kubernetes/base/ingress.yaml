# Kubernetes Ingress Configuration for Task Management System
# Version: networking.k8s.io/v1
# Dependencies:
# - cert-manager: v1 (for TLS certificate management)
# - nginx-ingress-controller: latest (for ingress implementation)
# - external-dns: latest (for DNS management)

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: task-management-ingress
  namespace: taskmanagement  # Referenced from namespace.yaml
  labels:
    app.kubernetes.io/name: task-management-system
    app.kubernetes.io/part-of: task-management-system
    app.kubernetes.io/managed-by: kustomize
  annotations:
    # Ingress Controller Configuration
    kubernetes.io/ingress.class: "nginx"
    
    # SSL/TLS Configuration with cert-manager
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-min-version: "TLSv1.3"  # Enforcing TLS 1.3 as per security requirements
    
    # Performance Tuning
    nginx.ingress.kubernetes.io/proxy-body-size: "25m"  # Matches file upload limit requirement
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"  # Extended timeout for long-running operations
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "4"
    
    # Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss:;";
    
    # CORS Configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"  # Rate limiting as per security requirements
    nginx.ingress.kubernetes.io/limit-whitelist: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"

spec:
  tls:
    - hosts:
        - api.taskmanagement.com
        - web.taskmanagement.com
      secretName: tms-tls-cert  # TLS certificate secret name
  
  rules:
    # API Gateway Routes
    - host: api.taskmanagement.com
      http:
        paths:
          # REST API endpoints
          - path: /api/v1
            pathType: Prefix
            backend:
              service:
                name: api-gateway
                port:
                  number: 80
          
          # WebSocket endpoints
          - path: /ws
            pathType: Prefix
            backend:
              service:
                name: websocket-service
                port:
                  number: 80
    
    # Web Frontend Routes
    - host: web.taskmanagement.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-frontend
                port:
                  number: 80