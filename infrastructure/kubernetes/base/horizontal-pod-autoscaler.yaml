# Kubernetes HorizontalPodAutoscaler v2 configuration
# Version: autoscaling/v2
# Purpose: Automatically scales pods based on CPU and memory metrics to ensure optimal performance

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-hpa
  namespace: taskmanagement
  labels:
    app.kubernetes.io/name: task-management-api
    app.kubernetes.io/part-of: task-management-system
    app.kubernetes.io/managed-by: kustomize
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-deployment
  minReplicas: 2  # Ensures high availability with minimum 2 replicas
  maxReplicas: 10 # Allows scaling up to 10 replicas under high load
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70  # Triggers scaling when CPU utilization exceeds 70%
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80  # Triggers scaling when memory utilization exceeds 80%
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60  # Wait 1 minute before scaling up again
      policies:
        - type: Pods
          value: 2  # Add up to 2 pods at a time
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300  # Wait 5 minutes before scaling down
      policies:
        - type: Pods
          value: 1  # Remove 1 pod at a time
          periodSeconds: 120

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: analytics-hpa
  namespace: taskmanagement
  labels:
    app.kubernetes.io/name: task-management-analytics
    app.kubernetes.io/part-of: task-management-system
    app.kubernetes.io/managed-by: kustomize
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: analytics-deployment
  minReplicas: 2  # Ensures high availability for analytics service
  maxReplicas: 8  # Lower max replicas due to higher resource requirements
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75  # Higher CPU threshold for analytics workloads
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 85  # Higher memory threshold for analytics workloads
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 120  # More conservative scale up for analytics
      policies:
        - type: Pods
          value: 1  # Add 1 pod at a time due to resource intensity
          periodSeconds: 120
    scaleDown:
      stabilizationWindowSeconds: 600  # Longer cool-down period for scale down
      policies:
        - type: Pods
          value: 1  # Remove 1 pod at a time
          periodSeconds: 300