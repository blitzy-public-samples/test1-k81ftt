// =============================================================================
// MATERIAL DESIGN 3 THEME SYSTEM
// Enterprise-grade theme implementation with accessibility support
// Version: 1.0.0
// =============================================================================

@import './variables';
@import './mixins';

// -----------------------------------------------------------------------------
// THEME CONFIGURATION
// Core theme settings and configuration
// -----------------------------------------------------------------------------

// Theme modes supported by the application
$theme-modes: ('light', 'dark', 'high-contrast');

// Base transition settings for theme changes
$theme-transition-props: (
  'background-color',
  'color',
  'border-color',
  'box-shadow',
  'fill',
  'stroke'
);
$theme-transition-duration: 300ms;

// -----------------------------------------------------------------------------
// LIGHT THEME
// Default light theme implementation
// -----------------------------------------------------------------------------

body[data-theme='light'] {
  // Color system
  --primary-color: #1976d2;
  --primary-light: #42a5f5;
  --primary-dark: #1565c0;
  --secondary-color: #9c27b0;
  --secondary-light: #ba68c8;
  --secondary-dark: #7b1fa2;
  
  // Surface colors
  --background-color: #ffffff;
  --surface-color: #f5f5f5;
  --surface-variant: #e7e0ec;
  
  // Text colors
  --text-primary: rgba(0, 0, 0, 0.87);
  --text-secondary: rgba(0, 0, 0, 0.6);
  --text-disabled: rgba(0, 0, 0, 0.38);
  
  // Functional colors
  --error-color: #d32f2f;
  --warning-color: #ed6c02;
  --success-color: #2e7d32;
  --info-color: #0288d1;
  
  // Border and divider
  --border-color: rgba(0, 0, 0, 0.12);
  --divider-color: rgba(0, 0, 0, 0.08);
  
  // State colors
  --state-hover: rgba(0, 0, 0, 0.04);
  --state-focus: rgba(0, 0, 0, 0.12);
  --state-selected: rgba(0, 0, 0, 0.08);
  --state-pressed: rgba(0, 0, 0, 0.12);
}

// -----------------------------------------------------------------------------
// DARK THEME
// Dark theme implementation with proper contrast ratios
// -----------------------------------------------------------------------------

body[data-theme='dark'] {
  // Color system
  --primary-color: #90caf9;
  --primary-light: #e3f2fd;
  --primary-dark: #42a5f5;
  --secondary-color: #ce93d8;
  --secondary-light: #f3e5f5;
  --secondary-dark: #ab47bc;
  
  // Surface colors
  --background-color: #121212;
  --surface-color: #1e1e1e;
  --surface-variant: #49454e;
  
  // Text colors
  --text-primary: rgba(255, 255, 255, 0.87);
  --text-secondary: rgba(255, 255, 255, 0.6);
  --text-disabled: rgba(255, 255, 255, 0.38);
  
  // Functional colors
  --error-color: #f44336;
  --warning-color: #ffa726;
  --success-color: #66bb6a;
  --info-color: #29b6f6;
  
  // Border and divider
  --border-color: rgba(255, 255, 255, 0.12);
  --divider-color: rgba(255, 255, 255, 0.08);
  
  // State colors
  --state-hover: rgba(255, 255, 255, 0.04);
  --state-focus: rgba(255, 255, 255, 0.12);
  --state-selected: rgba(255, 255, 255, 0.08);
  --state-pressed: rgba(255, 255, 255, 0.12);
}

// -----------------------------------------------------------------------------
// HIGH CONTRAST THEME
// Accessibility-focused theme with maximum contrast
// -----------------------------------------------------------------------------

body[data-theme='high-contrast'] {
  // Color system - simplified for maximum contrast
  --primary-color: #ffffff;
  --primary-light: #ffffff;
  --primary-dark: #ffffff;
  --secondary-color: #ffff00;
  --secondary-light: #ffff00;
  --secondary-dark: #ffff00;
  
  // Surface colors
  --background-color: #000000;
  --surface-color: #1a1a1a;
  --surface-variant: #ffffff;
  
  // Text colors
  --text-primary: #ffffff;
  --text-secondary: #ffff00;
  --text-disabled: #ffffff;
  
  // Functional colors
  --error-color: #ff0000;
  --warning-color: #ffa500;
  --success-color: #00ff00;
  --info-color: #00ffff;
  
  // Border and divider
  --border-color: #ffffff;
  --divider-color: #ffffff;
  
  // State colors
  --state-hover: #ffffff;
  --state-focus: #ffff00;
  --state-selected: #ffffff;
  --state-pressed: #ffff00;
}

// -----------------------------------------------------------------------------
// SYSTEM PREFERENCE DETECTION
// Automatic theme selection based on system preferences
// -----------------------------------------------------------------------------

@media (prefers-color-scheme: dark) {
  body:not([data-theme]) {
    @extend body[data-theme='dark'];
  }
}

@media (prefers-contrast: more) {
  body:not([data-theme]) {
    @extend body[data-theme='high-contrast'];
  }
}

// -----------------------------------------------------------------------------
// THEME TRANSITIONS
// Smooth transitions between theme changes
// -----------------------------------------------------------------------------

body {
  @each $property in $theme-transition-props {
    transition: #{$property} $theme-transition-duration ease-in-out;
  }
  
  @include reduced-motion {
    transition: none;
  }
}

// -----------------------------------------------------------------------------
// THEME UTILITY FUNCTIONS
// Helper functions for theme management
// -----------------------------------------------------------------------------

@function get-theme-value($property, $fallback: null) {
  @return var(--#{$property}, $fallback);
}

@mixin apply-theme-transition($properties: $theme-transition-props, $duration: $theme-transition-duration) {
  $transitions: ();
  
  @each $property in $properties {
    $transitions: append($transitions, $property $duration ease-in-out, comma);
  }
  
  transition: $transitions;
  
  @include reduced-motion {
    transition: none;
  }
}

// -----------------------------------------------------------------------------
// THEME PERSISTENCE
// Local storage management for theme preferences
// -----------------------------------------------------------------------------

@function persist-theme($theme-name) {
  @if not index($theme-modes, $theme-name) {
    @error "Invalid theme name: #{$theme-name}";
  }
  
  @return $theme-name;
}

// -----------------------------------------------------------------------------
// EXPORTS
// Theme variables and functions exposed for other modules
// -----------------------------------------------------------------------------

:export {
  themeColors: {
    primary: var(--primary-color);
    secondary: var(--secondary-color);
    background: var(--background-color);
    surface: var(--surface-color);
    error: var(--error-color);
    warning: var(--warning-color);
    success: var(--success-color);
    info: var(--info-color);
  };
  
  themeModes: $theme-modes;
  transitionDuration: $theme-transition-duration;
}